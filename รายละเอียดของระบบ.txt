📦 โปรเจกต์: LogGuard – Cybersecurity Log Monitoring System
ระบบตรวจจับความผิดปกติจาก Log แบบเรียลไทม์ สำหรับช่วยวิเคราะห์ความปลอดภัยเบื้องต้น

🧩 รายการฟีเจอร์ (Features) ทั้งหมด – อธิบายอย่างละเอียด
✅ 1. ระบบรับข้อมูล Log (Log Ingestion API)
รายละเอียด:
เปิด API endpoint เพื่อให้ระบบอื่นสามารถส่ง log เข้ามาได้แบบ JSON

ตัวอย่าง log ที่ส่งเข้า:

json
Copy
Edit
{
  "timestamp": "2025-07-30T10:30:00Z",
  "ip": "192.168.1.100",
  "endpoint": "/login",
  "status": 401,
  "message": "Unauthorized login attempt",
  "userAgent": "Mozilla/5.0"
}
วิธีทำงาน:

ระบบรับ log จาก client หรือระบบอื่น

ตรวจสอบว่าโครงสร้างข้อมูลถูกต้อง

เก็บลงฐานข้อมูล MongoDB

✅ 2. เก็บ Log ลง MongoDB (Log Storage)
รายละเอียด:
ใช้ MongoDB ในการจัดเก็บ log ทั้งหมดที่ได้รับ

วิธีทำงาน:

Log จะถูกเก็บใน collection ชื่อ logs

มี index ที่ timestamp และ ip เพื่อให้ค้นหาเร็ว

แยก collection ทุก 30 วัน (optional – ขั้นสูง)

✅ 3. ระบบวิเคราะห์ความผิดปกติ (Threat Detection Rules)
กติกาการตรวจจับเบื้องต้น (Rule-based Detection):

🔐 Brute Force: IP เดียว login ผิดเกิน 5 ครั้งใน 1 นาที

💥 Suspicious Endpoint: IP เดียว request /admin บ่อยผิดปกติ

🧬 SQL Injection Pattern: พบคำว่า ' OR 1=1-- หรือ UNION SELECT ใน URL หรือ payload

🦠 Malicious User Agent: User-Agent ที่เข้าข่าย bot หรือ scanner เช่น sqlmap

วิธีทำงาน:

ทุกครั้งที่มี log ใหม่เข้ามา → ตรวจ Rule

ถ้าตรงกับกฎ → บันทึกลง collection alerts พร้อมรายละเอียด

สามารถขยายไปใช้ regex หรือ machine learning ได้ในอนาคต

✅ 4. ระบบแจ้งเตือน (Alert Notification)
รูปแบบการแจ้งเตือน:

LINE Notify

Email

Webhook (optional)

ตัวอย่างข้อความแจ้งเตือน:

yaml
Copy
Edit
🚨 ALERT: Suspicious Activity Detected!
Type: Brute Force
IP: 192.168.1.100
Attempts: 8 times in 60 seconds
วิธีทำงาน:

เมื่อ rule trigger → ดึง template → ส่งแจ้งเตือน

✅ 5. Dashboard แสดง log และสถิติ (Frontend)
Tech ที่ใช้:
React + Tailwind CSS หรือ EJS + Chart.js (เลือกได้)

หน้าจอหลัก:

กราฟ Top 5 IP ที่ส่ง log มากที่สุด

กราฟการใช้งาน endpoint แปลกๆ

ตารางแสดง alert ทั้งหมด (ย้อนหลัง 24 ชม.)

ค้นหา log ย้อนหลังตาม IP / endpoint / status code

✅ 6. ระบบจัดการผู้ใช้งาน (Auth & Admin Panel)
(Optional แต่แนะนำถ้าอยากสมัครงานสาย Security Engineer)

ระบบล็อกอินด้วย JWT

Role: admin / viewer

Admin เพิ่ม user, เปลี่ยน rule, ปิดเปิดการแจ้งเตือนได้

🧠 สรุปภาพรวมการทำงาน
text
Copy
Edit
[ระบบภายนอกหรือ Device ต่าง ๆ]
          |
          | ส่ง Log (JSON)
          V
  [Log Ingestion API - Node.js]
          |
          V
  [MongoDB - เก็บ Log ทั้งหมด]
          |
          +--> ตรวจสอบกฎ -> ถ้าผิดปกติ -> เก็บลง alerts
          |                                |
          |                                V
          |                            ส่ง LINE Notify
          |
          +--> Dashboard (React) อ่าน log และ alert มาแสดงเป็นกราฟ / ตาราง
⚙️ Tech Stack ที่ใช้
Backend: Node.js + Express.js

Database: MongoDB

Frontend: React + Chart.js หรือ EJS

Notification: LINE Notify / Email API

Auth: JWT (สำหรับ admin panel)